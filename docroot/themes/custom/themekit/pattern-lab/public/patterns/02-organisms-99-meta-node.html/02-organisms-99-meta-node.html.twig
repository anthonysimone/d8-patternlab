{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only &quot;getter&quot; methods (method names starting with &quot;get&quot;, &quot;has&quot;, or &quot;is&quot;)
     and a few common methods such as &quot;id&quot; and &quot;label&quot; are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the &quot;compact&quot;
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a &quot;theming hook&quot;).
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     &quot;Article&quot; it would result in &quot;node--type-article&quot;. Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: &quot;node--view-mode-teaser&quot;, and
 *     full: &quot;node--view-mode-full&quot;.
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, &quot;teaser&quot; or &quot;full&quot;.
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
&lt;article{{ attributes }}&gt;

  {{ title_prefix }}
  {% if not page %}
    &lt;h2{{ title_attributes }}&gt;
      &lt;a href=&quot;{{ url }}&quot; rel=&quot;bookmark&quot;&gt;{{ label }}&lt;/a&gt;
    &lt;/h2&gt;
  {% endif %}
  {{ title_suffix }}

  {% if display_submitted %}
    &lt;footer class=&quot;footer byline node__byline&quot;&gt;
      {{ author_picture }}
      &lt;div{{ author_attributes }}&gt;
        {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
        {{ metadata }}
      &lt;/div&gt;
    &lt;/footer&gt;
  {% endif %}

  &lt;div{{ content_attributes }}&gt;
    {{ content }}
  &lt;/div&gt;

&lt;/article&gt;
